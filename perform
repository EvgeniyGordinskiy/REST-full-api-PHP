#!/usr/bin/env php
<?php
 use \App\Services\DB\DB;
/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/
require __DIR__.'/autoload.php';

$app = require_once __DIR__.'/bootstrap/app.php';

foreach ($argv as $i=>$arg )
{
	if ($arg === 'migrate') {
		migrate();
	}
}

function migrate () {
	$path = config('app','migrations_path');
	$migrations = scandir($path);
	foreach ($migrations as $migration) {
		if (is_file("$path/$migration")) {
			if ( checkMigration($migration) ) {
				$sql = require "$path/$migration";
				fwrite(STDOUT, "\033[0m begin migrating $migration" . PHP_EOL);
				try {
					$exec = DB::exec($sql);
				} catch (\Throwable $e) {
					fwrite(STDOUT, "\033[0m $e" . PHP_EOL);
				}

				if ($exec) {
					fwrite(STDOUT, "\033[32m migrated $migration" . PHP_EOL);
				} else {
					fwrite(STDOUT, "\033[31m unexpected error" . PHP_EOL);
				}
			}
		}
	}
}

function checkMigration($migration) {
	$stmt = DB::exec('show tables like "migrations"');
	if (count($stmt->fetchAll()) > 0) {
		$result = DB::exec('select * from migrations where name = "' .$migration .'"');
		if (count($result->fetchAll()) === 0) {
			$newMigration = DB::exec('insert into migrations (name) values (?)', true);
			$newMigration->bindValue(1,$migration, PDO::PARAM_STR);
			$newMigration->execute();
			if ( $newMigration ) {
				return true;
			}
		} else {
			fwrite(STDOUT, "\033[33m migration $migration all ready exist" . PHP_EOL);
		}
	}
	return false;
}